@using System.ComponentModel.DataAnnotations
@using ForestBookstore.Classes
@model ForestBookstore.Models.DbContext.Book

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div class="row">
    <div class="col-md-12">
        <h3>@Html.DisplayFor(model => model.Name)</h3>
        <h4><i>by </i>@Html.DisplayFor(model => model.Author.Name)</h4>
        <p><i>@ViewBag.Categories</i><i>Released on @Model.ReleaseDate.ToShortDateString()</i></p>
        <p>
            @if (Model.Image != null)
            {
                <img id="detailsViewBookImage" alt="Book Cover" src="@Url.Content("/Books/BookImage?id=" + Model.Id)" />
            }
            @Html.DisplayFor(model => model.Description)
        </p>
        <p>
            @if (Model.CurrentCount > 5)
            {
                @: <span style="color: green">&#9899;</span>In stock
            }
            else if (Model.CurrentCount > 0 && Model.CurrentCount <= 5)
            {
                @: <span style="color: orange">&#9899;</span>Low stock
            }
            else
            {
                @: <span style="color: red">&#9899;</span>Out of stock
            }
        </p>
        @if (User.IsInRole("Admin"))
        {
            <p>
                <b>@Html.DisplayNameFor(model => model.CreatedOn): </b>
                @Html.DisplayFor(model => model.CreatedOn)
            </p>
        }
    </div>
</div>

<p></p>
<p>
    <b>@Html.DisplayNameFor(model => model.Price): </b>
    @Html.DisplayFor(model => model.Price) BGN
</p>

<p>
    @if (User.Identity.IsAuthenticated)
    {
        if (Model.CurrentCount <= 0)
        {
            <input type="submit" class="btn btn-default" value="Order" disabled />
        }
        else
        {
            using (Ajax.BeginForm("AddToCart", "ShoppingCart", new { bookId = @Model.Id },
                    new AjaxOptions
                    {
                        HttpMethod = "POST",
                        UpdateTargetId = "currentOrderedBook",
                        OnBegin = "disable",
                        OnFailure = "enable",
                        OnSuccess = "successfulOrder",
                        OnComplete = "enable"
                    }, new { @class = "" }))
            {
                <input type="submit" id="@Model.Id" class="btn btn-default" name="Order" value="Add to Cart">
            }
        }
    }
    else
    {
        @Html.ActionLink("Login to Order", "Login", "Account")
    }
</p>
<label id="currentOrderedBook" hidden></label>

<div id="writa-a-review-form-@Model.Id">
    @Ajax.ActionLink("Write a Customer Review »", "Create", "Reviews", new { id = Model.Id }, new AjaxOptions
{
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "writa-a-review-form-" + Model.Id
}, new { @class = "btn btn-default" })
</div>

<div>
    @if (Model.Reviews.Any())
    {
        @:<h4>Customer Reviews:</h4>
        <ul>
            @foreach (var review in Model.Reviews.OrderByDescending(r => r.Date))
            {
                <li id="customer-review">
                    @if (@review.Author != null)
                    {
                        <p>
                            <b><i>Posted by: </i>@review.Author.UserName <i>on</i> @review.Date.ToShortDateString()</b>
                        </p>
                    }
                    else
                    {
                        <p>
                            <b><i>Posted by: </i> Anonymous<i> on</i> @review.Date.ToShortDateString()</b>
                        </p>
                    }
                    <p>@review.Text</p>
                </li>
            }
        </ul>
    }
    else
    {
        <p></p>
        <p><b>No customer reviews yet</b></p>
    }
</div>

<p>
    @if (User.IsInRole("Admin"))
    {
        @Html.ActionLink("Edit", "Edit", new { id = Model.Id })
        @:|
    }
    @Html.ActionLink("Go to books", "Index")
</p>

@section scripts {
    @Scripts.Render("~/bundles/ajax")

    <script>
            function disable() {
                $(this).find('input').prop('disabled', true);
            }

            function enable() {
                $(this).find('input').prop('disabled', false);
            }

            function successfulOrder() {
                $.notify(
                  $("#currentOrderedBook").text() + " added in the Shopping Cart!",
                { position: "right bottom", className: "success" }
                );
            }
    </script>
}